__all__ = (
    "main",
)

import argparse
from typing import List

from yasim.helper.tcr import rearrange_tcr
from yasim_sctcr._main import get_sample_data_path


def _parse_args(args: List[str]) -> argparse.Namespace:
    parser = argparse.ArgumentParser()
    parser.add_argument(
        '--tcr_genelist_path',
        required=True,
        help=f"TCR Gene List JSON. The IMGT version for human is {get_sample_data_path('tcr_gene_list.min.json')}",
        nargs='?',
        type=str,
        action='store'
    )
    parser.add_argument(
        '--tcr_cache_path',
        required=True,
        help="TCR Cache JSON generated by `generate_tcr_cache`",
        nargs='?',
        type=str,
        action='store'
    )
    parser.add_argument(
        '--cdr3_deletion_table_path',
        required=True,
        help=f"TCR CDR3 Deletion Table JSON. See examples in {get_sample_data_path('cdr3_deletion_table.min.json')}",
        nargs='?',
        type=str,
        action='store'
    )
    parser.add_argument(
        '--cdr3_insertion_table_path',
        required=True,
        help=f"TCR CDR3 Insertion Table JSON. See examples in {get_sample_data_path('cdr3_insertion_table.min.json')}",
        nargs='?',
        type=str,
        action='store'
    )
    parser.add_argument(
        '--barcode_path',
        required=True,
        help="Barcode TXT path generated by `yasim_sc generate_barcode`",
        nargs='?',
        type=str,
        action='store'
    )
    parser.add_argument(
        '-o',
        '--out',
        required=True,
        help="Output basename",
        nargs='?',
        type=str,
        action='store'
    )
    return parser.parse_args(args)


def main(args: List[str]):
    args = _parse_args(args)
    rearrange_tcr(
        output_base_path=args.out,
        tcr_genelist_path=args.tcr_genelist_path,
        tcr_cache_path=args.tcr_cache_path,
        cdr3_deletion_table_path=args.cdr3_deletion_table_path,
        cdr3_insertion_table_path=args.cdr3_insertion_table_path,
        barcode_path=args.barcode_path
    )
